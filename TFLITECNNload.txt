import cv2
import numpy as np
import tensorflow as tf

# Load the TFLite model
interpreter = tf.lite.Interpreter(model_path="/home/team7/180model.tflite")
interpreter.allocate_tensors()

# Class names for CIFAR-10
class_names = ['aeroplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']

# Preprocess function for CIFAR-10
def preprocess_image(image):
    resized = cv2.resize(image, (32, 32))
    normalized_float32 = np.float32(resized) / 255.0
    reshaped = np.expand_dims(normalized_float32, axis=0)  # Add batch dimension
    return reshaped

# Initialize video capture
cap = cv2.VideoCapture(0)

while True:
    ret, image = cap.read()

    if not ret:
        break

    # Preprocess the captured frame
    preprocessed_image = preprocess_image(image)

    # Perform inference
    input_details = interpreter.get_input_details()
    output_details = interpreter.get_output_details()
    
    interpreter.set_tensor(input_details[0]['index'], preprocessed_image)
    interpreter.invoke()
    predictions = interpreter.get_tensor(output_details[0]['index'])
    
    predicted_class = np.argmax(predictions)
    predicted_class_name = class_names[predicted_class]

    # Display the result on the image
    result_text = 'Predicted class: {}'.format(predicted_class_name)
    cv2.putText(image, result_text, org=(35, 60), fontFace=cv2.FONT_HERSHEY_SIMPLEX, fontScale=1, color=(0, 255, 0), thickness=3)

    # Show the image with text
    cv2.imshow("image", image)

    # Break the loop if Enter key is pressed
    if cv2.waitKey(1) == 13:  # ASCII value for Enter key is 13
        break

# Release the video capture object and close all OpenCV windows
cap.release()
cv2.destroyAllWindows()
